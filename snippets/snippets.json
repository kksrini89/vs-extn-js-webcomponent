{
    "Create Vanilla JS Web Component": {
        "prefix": "js-webcomponent",
        "body": [
          "const template = document.createElement('template');",
          "template.innerHTML = `",
          "<style>",
          " :host { }",
          " ::slotted(*) { }",
          " .highlight {",
          "   color: blue;",
          " }",
          "</style>",
          "<div class=\"highlight\">Hello Web Component</div>",
          "<slot></slot>",
          "<slot name=\"input\" ></slot>",
          "`;",
          "",
          "class ${1:Hello}Component extends HTMLElement {",
          "   constructor() {",
          "     super();",
          "     this._shadowRoot = this.attachShadow({ mode:'open' });",
          "   }",
          "",
          "   static get observedAttributes() {",
          "     return [''];",
          "   }",
          "   ",
          "   connectedCallback() {",
          "     this._shadowRoot.appendChild(template.content.cloneNode(true));",
          "   }",
          "",
          "   attributeChangedCallback(name, oldVal, newVal) {",
          "   }",
          "}",
          "customElements.define('${2:vj-hello}', ${1:Hello}Component);",
          ""
        ],
        "description": "Create Vanilla JS Web Component"
    },
    "Life cycle hooks for Vanilla JS Web Component": {
      "prefix": "js-wc-hooks",
      "body": [
        "connectedCallback() {",
        "  // Will be triggered When your Web component is mounted into the DOM tree",
        "  // Element References from the template",
        "  // Best place to define Shadow DOM",
        "  ${1:start from here}",
        "}",
        "",
        "attributeChangedCallback(attributeName, oldValue, newValue) {",
        "  // Will be triggered when the value is assigned from the template",
        "}",
        "",
        "disconnectedCallback() {",
        " // Will be triggered once your web component is destroyed/de-linked from where it's mounted.",
        "}",
        "",
        "adoptedCallback() {",
        "// Least bothered Since The first 3 would suffice for most use cases.",
        "}"
      ],
      "description": "Life cycle hooks for Vanilla JS Web Component"
    }
}